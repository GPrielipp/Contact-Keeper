{"ast":null,"code":"var _jsxFileName = \"/home/tim/Desktop/React Apps/contact-keeper/client/src/context/auth/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); // Load user\n\n  const loadUser = () => {}; // Register user\n\n\n  const registerUser = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login user\n\n\n  const loginUser = () => {}; // Logout\n\n\n  const logoutUser = () => {}; // Clear errors\n\n\n  const clearErrors = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      error: state.error,\n      user: state.user,\n      loadUser,\n      registerUser,\n      loginUser,\n      logoutUser,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/home/tim/Desktop/React Apps/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","user","state","dispatch","loadUser","registerUser","formData","config","headers","res","post","type","payload","data","err","response","msg","loginUser","logoutUser","clearErrors","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;;AAWA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,KAAK,EAAE,IAJY;AAKnBC,IAAAA,IAAI,EAAE;AALa,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAApC,CAT2B,CAW3B;;AACA,QAAMU,QAAQ,GAAG,MAAM,CAAE,CAAzB,CAZ2B,CAc3B;;;AACA,QAAMC,YAAY,GAAG,MAAOC,QAAP,IAAoB;AACvC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM5B,KAAK,CAAC6B,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCC,MAAnC,CAAlB;AACAJ,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE3B,gBAAR;AAA0B4B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAvC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE1B,aAAR;AAAuB2B,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAAlD,OAAD,CAAR;AACD;AACF,GAbD,CAf2B,CA8B3B;;;AACA,QAAMC,SAAS,GAAG,MAAM,CAAE,CAA1B,CA/B2B,CAiC3B;;;AACA,QAAMC,UAAU,GAAG,MAAM,CAAE,CAA3B,CAlC2B,CAoC3B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBhB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEpB;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAJR;AAKLC,MAAAA,IAAI,EAAEC,KAAK,CAACD,IALP;AAMLG,MAAAA,QANK;AAOLC,MAAAA,YAPK;AAQLY,MAAAA,SARK;AASLC,MAAAA,UATK;AAULC,MAAAA;AAVK,KADT;AAAA,cAcG1B,KAAK,CAAC2B;AAdT;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3DD;;GAAM5B,S;;KAAAA,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  // Load user\n  const loadUser = () => {};\n\n  // Register user\n  const registerUser = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\n    }\n  };\n\n  // Login user\n  const loginUser = () => {};\n\n  // Logout\n  const logoutUser = () => {};\n\n  // Clear errors\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        error: state.error,\n        user: state.user,\n        loadUser,\n        registerUser,\n        loginUser,\n        logoutUser,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}