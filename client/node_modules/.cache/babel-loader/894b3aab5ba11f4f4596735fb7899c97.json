{"ast":null,"code":"var _jsxFileName = \"/home/tim/Desktop/React Apps/contact-keeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport * as uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sara Watson',\n      email: 'sara@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Harry White',\n      email: 'harry@gmail.com',\n      phone: '333-333-3333',\n      type: 'professional'\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add contact\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete contact\n\n\n  const deleteContact = contactID => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: contactID\n    });\n  }; // Set current contact\n  // Clear current contact\n  // Update contact\n  // Filter contacts\n  // Clear filter\n\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/home/tim/Desktop/React Apps/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","v4","payload","deleteContact","contactID","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP;;;AAUA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,EAQR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KARQ,EAeR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,KAAK,EAAE,iBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KAfQ,CADS;AAwBnBC,IAAAA,OAAO,EAAE;AAxBU,GAArB;AA2BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CAApC,CA5B8B,CA8B9B;;AACA,QAAMU,UAAU,GAAIC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACT,EAAR,GAAad,IAAI,CAACwB,EAAL,EAAb;AACAH,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEf,WAAR;AAAqBsB,MAAAA,OAAO,EAAEF;AAA9B,KAAD,CAAR;AACD,GAHD,CA/B8B,CAoC9B;;;AACA,QAAMG,aAAa,GAAIC,SAAD,IAAe;AACnCN,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEd,cAAR;AAAwBqB,MAAAA,OAAO,EAAEE;AAAjC,KAAD,CAAR;AACD,GAFD,CArC8B,CAyC9B;AAEA;AAEA;AAEA;AAEA;;;AAEA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLd,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADX;AAELS,MAAAA,UAFK;AAGLI,MAAAA;AAHK,KADT;AAAA,cAOGf,KAAK,CAACiB;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9DD;;GAAMlB,Y;;KAAAA,Y;AAgEN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport * as uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from '../types';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: 'Jill Johnson',\n        email: 'jill@gmail.com',\n        phone: '111-111-1111',\n        type: 'personal',\n      },\n      {\n        id: 2,\n        name: 'Sara Watson',\n        email: 'sara@gmail.com',\n        phone: '222-222-2222',\n        type: 'personal',\n      },\n      {\n        id: 3,\n        name: 'Harry White',\n        email: 'harry@gmail.com',\n        phone: '333-333-3333',\n        type: 'professional',\n      },\n    ],\n    current: null,\n  };\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  // Add contact\n  const addContact = (contact) => {\n    contact.id = uuid.v4();\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n\n  // Delete contact\n  const deleteContact = (contactID) => {\n    dispatch({ type: DELETE_CONTACT, payload: contactID });\n  };\n\n  // Set current contact\n\n  // Clear current contact\n\n  // Update contact\n\n  // Filter contacts\n\n  // Clear filter\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        addContact,\n        deleteContact,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}