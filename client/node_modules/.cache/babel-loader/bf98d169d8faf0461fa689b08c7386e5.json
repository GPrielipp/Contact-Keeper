{"ast":null,"code":"var _jsxFileName = \"/home/tim/Desktop/React Apps/contact-keeper/client/src/components/contacts/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, Fragment } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered\n  } = contactContext;\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add a contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  const contactsToUse = filtered === null ? contacts : filtered;\n  console.log(contactsToUse);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: contactsToUse.map(contact => /*#__PURE__*/_jsxDEV(ContactItem, {\n      contact: contact\n    }, contact.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"6ffJmqxeUUv4Q9skTZKiRD1WUuU=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/home/tim/Desktop/React Apps/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","useContext","Fragment","ContactContext","ContactItem","Contacts","contactContext","contacts","filtered","length","contactsToUse","console","log","map","contact","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,cAAc,GAAGL,UAAU,CAACE,cAAD,CAAjC;AAEA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,cAA/B;;AAEA,MAAIC,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,aAAa,GAAGF,QAAQ,KAAK,IAAb,GAAoBD,QAApB,GAA+BC,QAArD;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAEA,sBACE,QAAC,QAAD;AAAA,cACGA,aAAa,CAACG,GAAd,CAAmBC,OAAD,iBACjB,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAEA;AAAvC,OAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnBD;;GAAMV,Q;;KAAAA,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import React, { useContext, Fragment } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered } = contactContext;\n\n  if (contacts.length === 0) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  const contactsToUse = filtered === null ? contacts : filtered;\n  console.log(contactsToUse);\n\n  return (\n    <Fragment>\n      {contactsToUse.map((contact) => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}