{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      console.log(action.payload, state.contacts);\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      try {\n        if (action.payload === state.current.id) {\n          return { ...state,\n            current: null\n          };\n        }\n      } finally {\n        return state;\n      }\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex) || contact.phone.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ContactReducer;\nexport default ContactReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactReducer\");","map":{"version":3,"sources":["/home/tim/Desktop/React Apps/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactReducer","state","action","type","contacts","payload","console","log","filter","contact","id","current","map","filtered","regex","RegExp","name","match","email","phone"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP;;AAUA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFL,OAAP;;AAKF,SAAKX,cAAL;AACEY,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,OAAnB,EAA4BJ,KAAK,CAACG,QAAlC;AACA,aAAO,EACL,GAAGH,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeI,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACG,OAD3B;AAFL,OAAP;;AAOF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELU,QAAAA,OAAO,EAAET,MAAM,CAACG;AAFX,OAAP;;AAKF,SAAKT,aAAL;AACE,UAAI;AACF,YAAIM,MAAM,CAACG,OAAP,KAAmBJ,KAAK,CAACU,OAAN,CAAcD,EAArC,EAAyC;AACvC,iBAAO,EACL,GAAGT,KADE;AAELU,YAAAA,OAAO,EAAE;AAFJ,WAAP;AAID;AACF,OAPD,SAOU;AACR,eAAOV,KAAP;AACD;;AAEH,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeQ,GAAf,CAAoBH,OAAD,IAC3BA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACG,OAAP,CAAeK,EAA9B,GAAmCR,MAAM,CAACG,OAA1C,GAAoDI,OAD5C;AAFL,OAAP;;AAOF,SAAKX,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELY,QAAAA,QAAQ,EAAEZ,KAAK,CAACG,QAAN,CAAeI,MAAf,CAAuBC,OAAD,IAAa;AAC3C,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEb,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBACEI,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KACAL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CADA,IAEAL,OAAO,CAACU,KAAR,CAAcF,KAAd,CAAoBH,KAApB,CAHF;AAKD,SAPS;AAFL,OAAP;;AAYF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELY,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAKF;AACE,aAAOZ,KAAP;AA9DJ;AAgED,CAjED;;KAAMD,c;AAmEN,eAAeA,cAAf","sourcesContent":["import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from '../types';\n\nconst ContactReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload],\n      };\n\n    case DELETE_CONTACT:\n      console.log(action.payload, state.contacts);\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n\n    case CLEAR_CURRENT:\n      try {\n        if (action.payload === state.current.id) {\n          return {\n            ...state,\n            current: null,\n          };\n        }\n      } finally {\n        return state;\n      }\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id ? action.payload : contact\n        ),\n      };\n\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return (\n            contact.name.match(regex) ||\n            contact.email.match(regex) ||\n            contact.phone.match(regex)\n          );\n        }),\n      };\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ContactReducer;\n"]},"metadata":{},"sourceType":"module"}